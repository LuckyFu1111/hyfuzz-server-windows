# ==============================================================================
# HyFuzz Server - Modern Python Project Configuration
# ==============================================================================
# This file configures build system and project metadata
# Reference: PEP 518, PEP 621
# ==============================================================================

[build-system]
# Modern build backend
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"


[project]
# Basic project metadata
name = "hyfuzz-server"
version = "1.0.0"
description = "HyFuzz Server - Hybrid AI-Enhanced Vulnerability Detection Framework (Windows MCP Server)"
readme = "README.md"
requires-python = ">=3.9,<4.0"
license = {text = "MIT"}
authors = [
    {name = "HyFuzz Contributors", email = "support@hyfuzz.ai"}
]
maintainers = [
    {name = "HyFuzz Development Team", email = "dev@hyfuzz.ai"}
]

# Project keywords
keywords = [
    "security",
    "vulnerability",
    "fuzzing",
    "llm",
    "ai",
    "detection",
    "exploit",
    "cot",
    "coap",
    "modbus",
    "mcp",
]

# Project classifiers
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Microsoft :: Windows :: Windows 10",
    "Operating System :: Microsoft :: Windows :: Windows 11",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Environment :: No Input/Output (Daemon)",
    "Typing :: Typed",
]

# Production dependencies
dependencies = [
    "aiohttp==3.9.1",
    "starlette==0.35.0",
    "requests==2.31.0",
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",
    "typing-extensions==4.9.0",
    "python-dotenv==1.0.0",
    "pyyaml==6.0.1",
    "ollama==0.1.0",
    "faiss-cpu==1.7.4",
    "sentence-transformers==2.2.2",
    "numpy==1.24.3",
    "scikit-learn==1.3.2",
    "pandas==2.1.3",
    "sqlalchemy==2.0.23",
    "psycopg2-binary==2.9.9",
    "redis==5.0.1",
    "python-json-logger==2.0.7",
    "prometheus-client==0.19.0",
    "tenacity==8.2.3",
    "pybreaker==1.4.0",
    "validators==0.22.0",
    "python-dateutil==2.8.2",
    "cryptography==41.0.7",
    "aiofiles==23.2.1",
]


[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "pytest-timeout==2.2.0",
    "pytest-xdist==3.5.0",
    "black==23.12.0",
    "pylint==3.0.3",
    "flake8==6.1.0",
    "isort==5.13.2",
    "autopep8==2.0.4",
    "mypy==1.7.1",
    "pyright==1.1.336",
    "ipython==8.18.1",
    "ipdb==0.13.13",
    "memory-profiler==0.61.0",
    "line-profiler==4.1.1",
    "py-spy==0.3.14",
]

# GPU acceleration
gpu = [
    "torch==2.1.0",
    "faiss-gpu==1.7.4",
]

# Advanced monitoring
monitoring = [
    "sentry-sdk==1.39.1",
    "datadog==0.47.0",
]

# Distributed processing
distributed = [
    "celery==5.3.4",
    "kombu==5.3.4",
]

# All optional dependencies
all = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "pytest-timeout==2.2.0",
    "pytest-xdist==3.5.0",
    "black==23.12.0",
    "pylint==3.0.3",
    "flake8==6.1.0",
    "isort==5.13.2",
    "autopep8==2.0.4",
    "mypy==1.7.1",
    "pyright==1.1.336",
    "ipython==8.18.1",
    "ipdb==0.13.13",
    "memory-profiler==0.61.0",
    "line-profiler==4.1.1",
    "py-spy==0.3.14",
    "torch==2.1.0",
    "faiss-gpu==1.7.4",
    "sentry-sdk==1.39.1",
    "datadog==0.47.0",
    "celery==5.3.4",
    "kombu==5.3.4",
]


[project.urls]
Homepage = "https://github.com/your-org/hyfuzz-server-windows"
Documentation = "https://github.com/your-org/hyfuzz-server-windows/tree/main/docs"
Repository = "https://github.com/your-org/hyfuzz-server-windows.git"
"Bug Tracker" = "https://github.com/your-org/hyfuzz-server-windows/issues"
Changelog = "https://github.com/your-org/hyfuzz-server-windows/releases"


[project.scripts]
# Console entry points
hyfuzz-server = "src.mcp_server.server:main"
hyfuzz-server-start = "scripts.start_server:main"
hyfuzz-health = "scripts.health_check:main"
hyfuzz-setup = "scripts.setup_env:main"
hyfuzz-test = "scripts.test_mcp:main"


# ==============================================================================
# TOOL CONFIGURATIONS
# ==============================================================================

[tool.setuptools]
# Setuptools configuration
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["hyfuzz_server*"]
exclude = ["tests*"]


# ==============================================================================
# PYTEST CONFIGURATION
# ==============================================================================

[tool.pytest.ini_options]
# pytest configuration
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"


# ==============================================================================
# COVERAGE CONFIGURATION
# ==============================================================================

[tool.coverage.run]
# Coverage measurement configuration
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__main__.py",
]

[tool.coverage.report]
# Coverage report configuration
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
skip_covered = false
precision = 2
show_missing = true
fail_under = 80


# ==============================================================================
# BLACK CODE FORMATTER
# ==============================================================================

[tool.black]
# Black code formatter configuration
line-length = 100
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


# ==============================================================================
# ISORT IMPORT SORTER
# ==============================================================================

[tool.isort]
# isort configuration
profile = "black"
line_length = 100
multi_line_mode = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*"]


# ==============================================================================
# PYLINT CODE ANALYZER
# ==============================================================================

[tool.pylint.messages_control]
# Pylint configuration
disable = [
    "C0103",  # Invalid name
    "R0913",  # Too many arguments
    "R0914",  # Too many local variables
    "W0212",  # Protected access
]

[tool.pylint.format]
max-line-length = 100


# ==============================================================================
# MYPY TYPE CHECKER
# ==============================================================================

[tool.mypy]
# MyPy configuration
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true


# ==============================================================================
# PYRIGHT TYPE CHECKER
# ==============================================================================

[tool.pyright]
# Pyright configuration
include = ["src"]
exclude = ["**/node_modules", "**/__pycache__", "tests"]
typeCheckingMode = "basic"
pythonVersion = "3.9"


# ==============================================================================
# END OF PYPROJECT.TOML
# ==============================================================================